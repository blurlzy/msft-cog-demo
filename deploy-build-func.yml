# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

## set the to WEBSITE_WEBDEPLOY_USE_SCM = "true" to fix the issue: Can't find loc string for key: KuduStackTraceURL
trigger:
- main

variables:
  # Agent VM image name
  vmImageName: 'ubuntu-latest'

  # Azure Resource Manager connection created during pipeline creation
  azResourceManagerConn: 'service-conn-msft-zl'

  # Function app name
  functionAppName: 'func-msft-zl'

  # Working Directory
  workingDirectory: '$(System.DefaultWorkingDirectory)/Msft.Demo.Serverless'

stages:
- stage: Dev_Build
  displayName: Dev Build stage

  jobs:
  - job: Build
    displayName: Build
    pool:
      vmImage: $(vmImageName)

    steps:
    - task: DotNetCoreCLI@2
      displayName: Build
      inputs:
        command: 'build'
        projects: |
          $(workingDirectory)/*.csproj
        arguments: --output $(System.DefaultWorkingDirectory)/publish_output --configuration Release

    - task: ArchiveFiles@2
      displayName: 'Archive files'
      inputs:
        rootFolderOrFile: '$(System.DefaultWorkingDirectory)/publish_output'
        includeRootFolder: false
        archiveType: zip
        archiveFile: $(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip
        replaceExistingArchive: true

    - publish: $(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip
      artifact: drop

- stage: Dev_Deploy
  displayName: Dev Deploy stage
  dependsOn: Dev_Build
  condition: succeeded()

  jobs:
  - deployment: Deploy
    displayName: Deploy
    environment: 'development'
    pool:
      vmImage: $(vmImageName)

    strategy:
      runOnce:
        deploy:

          steps:
          - task: AzureFunctionApp@1
            displayName: 'Azure functions app deploy'
            inputs:
              azureSubscription: '$(azResourceManagerConn)'
              appType: functionApp
              appName: $(functionAppName)
              package: '$(Pipeline.Workspace)/drop/$(Build.BuildId).zip'